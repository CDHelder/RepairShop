@model IEnumerable<RepairShop.Data.Models.RepairOrder>

@{
    ViewBag.Title = "Index";
}

<h2>
    All registered repair orders
</h2>

<p>
    @Html.ActionLink("Create New Repair Order", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StatusRepair)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BeginDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.BeginDate <= DateTime.Today)
        {
            string bgcolor;
            string status = item.StatusRepair.ToString();

            <tr style='background-color:lightcoral;'>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                    @switch (status)
                    {
                        case "On_hold": bgcolor = "red"; break;
                        case "Under_repair": bgcolor = "black"; break;
                        case "Waiting_for_parts": bgcolor = "black"; break;
                        case "Done": bgcolor = "darkgreen"; break;
                        default: bgcolor = "black"; return;
                    }

                <td style="color:@bgcolor;">
                    @Html.DisplayFor(modelItem => item.StatusRepair)
                    
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.BeginDate)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
        else
        {
            string bgcolor;
            string status = item.StatusRepair.ToString();

            <tr style='background-color:white;'>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                    @switch (status)
                    {
                        case "On_hold": bgcolor = "red"; break;
                        case "Under_repair": bgcolor = "black"; break;
                        case "Waiting_for_parts": bgcolor = "black"; break;
                        case "Done": bgcolor = "darkgreen"; break;
                        default: bgcolor = "black"; return;
                    }

                <td style="color:@bgcolor;">
                    @Html.DisplayFor(modelItem => item.StatusRepair)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.BeginDate)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    }

</table>
